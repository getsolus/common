version : '3'

includes:
  infra:
    dir: "{{ .ROOT_DIR }}"
    taskfile: infrastructure-tooling/Infra.yml
    optional: true

set: [pipefail]

vars:
  SPECFILE:
    sh: if [ -f "{{ .USER_WORKING_DIR }}/package.yml" ]; then echo "package.yml"; else echo "pspec.xml"; fi;

tasks:
  # Utility tasks, mainly for precondition checks
  package-file:
    internal: true
    desc: |
      Check that either `package.yml` or `pspec.xml` exists in the current directory
    dir: '{{ .USER_WORKING_DIR }}'
    requires:
      vars: [SPECFILE]
    preconditions:
      - sh: test -f package.yml || test -f pspec.xml
        msg: Either `package.yml` or `pspec.xml` must exists in the current directory

  # Build packages
  build:
    desc: Build the current package against the unstable repo
    aliases: [default]
    dir: '{{ .USER_WORKING_DIR }}'
    vars:
      PROFILE: '{{ default "unstable-x86_64" .PROFILE }}'
    deps:
      - package-file
    cmds:
      - sudo solbuild build {{ .SPECFILE }} -p {{ .PROFILE }} {{ .CLI_ARGS }}

  build-stable:
    desc: Build the current package against the stable repo (do NOT use for official submissions!)
    aliases: [stable]
    cmds:
      - task: build
        vars:
          PROFILE: 'main-x86_64'
      - |
        echo "=========================================================================="
        echo "WARNING: This package was built against -stable and is for local use only."
        echo "                                                                          "
        echo "         Do NOT publish packages or Pull Requests built against -stable!!!"
        echo "=========================================================================="

  build-local:
    desc: "Build the current package against the unstable and the default local repo"
    aliases: [local]
    cmds:
      - task: build
        vars:
          PROFILE: 'local-unstable-x86_64'

  # Modify packages
  bump:
    desc: Bump current release
    dir: '{{ .USER_WORKING_DIR }}'
    vars:
      YBUMP: "/usr/share/ypkg/ybump.py"
      PBUMP: "{{ .TASKFILE_DIR }}/common/Scripts/pbump.py"
      BUMP_SCRIPT: '{{ eq .SPECFILE "package.yml" | ternary .YBUMP .PBUMP }}'
    deps:
      - package-file
    cmds:
      - python {{ .BUMP_SCRIPT }} {{ .SPECFILE }}

  convert:
    desc: Convert pspec to package.yml
    dir: '{{ .USER_WORKING_DIR }}'
    preconditions:
      - sh: test -f pspec.xml
        msg: "`pspec.xml` must in the current directory to perform conversion"
    cmds:
      - |
        "{{ .TASKFILE_DIR }}/common/Scripts/yconvert.py" pspec.xml

  # For packagers
  publish:
    desc: Tag and publish a release
    dir: '{{ .USER_WORKING_DIR }}'
    preconditions:
      - sh: test $(git symbolic-ref HEAD 2>/dev/null) = "refs/heads/master"
        msg: Not on master branch
      - sh: '! git show-ref --quiet --tags {{ .TAG }}'
        msg: Tag already exists! Did you mean to call `go-task republish`?
      - sh: "{{ .TASKFILE_DIR }}/common/Scripts/package-publish-safety-catches.sh"
        msg: Failed to pass safety catches
    deps:
      - package-file
    vars:
      TAG:
        sh: if [ -f {{ .SPECFILE }} ]; then {{ .TASKFILE_DIR }}/common/Scripts/gettag.py {{ .USER_WORKING_DIR }}/{{ .SPECFILE }}; fi;
      SIGNTAG:
        sh: if [ "$(git config commit.gpgsign)" == "true" ]; then echo "-s"; else echo " "; fi;
    cmds:
      - git tag {{ .SIGNTAG }} -a -m "Publish {{ .TAG }}" {{ .TAG }}
      - git push --follow-tags
      - task: push
        vars:
          SOURCE:
            sh: basename '{{ .USER_WORKING_DIR }}'
          TAG: '{{ .TAG }}'

  republish:
    desc: Rebuild existing tag
    dir: '{{ .USER_WORKING_DIR }}'
    preconditions:
      - sh: test $(git symbolic-ref HEAD 2>/dev/null) = "refs/heads/master"
        msg: Not on master branch
      - sh: git show-ref --quiet --tags {{ .TAG }}
        msg: Tag doesn't exists! Did you mean to call `go-task publish`?
      - sh: "{{ .TASKFILE_DIR }}/common/Scripts/package-publish-safety-catches.sh"
        msg: Failed to pass safety catches
    vars:
      TAG:
        sh: if [ -f {{ .SPECFILE }} ]; then {{ .TASKFILE_DIR }}/common/Scripts/gettag.py {{ .USER_WORKING_DIR }}/{{ .SPECFILE }}; fi;
    cmds:
      - task: push
        vars:
          SOURCE:
            sh: basename '{{ .USER_WORKING_DIR }}'
          TAG: '{{ .TAG }}'

  push:
    desc: Push package to the build server
    internal: true
    dir: '{{ .USER_WORKING_DIR }}'
    requires:
      vars: [SOURCE, TAG]
    cmds:
      - ssh build-controller@build.getsol.us build "{{ .SOURCE }}" "{{ .TAG }}"

  # Other utilities
  clean:
    desc: Clean current tree
    dir: '{{ .USER_WORKING_DIR }}'
    cmds:
      - rm *.eopkg -fv

  pull:
    desc: Pull/rebase latest changes
    dir: '{{ .USER_WORKING_DIR }}'
    preconditions:
      - test -d .git
    cmds:
      - git pull --rebase

  switch-domains:
    desc: Update local repositories to use correct hostname
    cmds:
      - go run "{{ .TASKFILE_DIR }}/common/Go/switch_repo_domains.go"

  pkgconfig:
    desc: Find which package provides a given pkgconfig. Example usage `go-task pkgconfig -- Qt5Core Qt6Core`
    cmds:
      - python {{ .ROOT_DIR }}/common/Scripts/epcsearch.py {{ .CLI_ARGS }}

  clone:
    desc: Clone a given packages source repo. Example usage `go-task clone -- reponame`
    cmds:
      - |
        if [ -d "{{.CLI_ARGS}}" ]; then
          echo "Clone already exists"
        else
            git clone https://github.com/solus-packages/{{ .CLI_ARGS }}.git
            git -C "{{ .CLI_ARGS }}" remote set-url origin "https://github.com/solus-packages/{{ .CLI_ARGS }}.git"
            git -C "{{ .CLI_ARGS }}" remote set-url --push origin "git@github.com:solus-packages/{{ .CLI_ARGS }}.git"
        fi

  clone-all:
    desc: Clone all Solus package source repos (You probably do not want to do this)
    cmds:
        - python3 {{ .TASKFILE_DIR }}/common/Scripts/clone-all.py {{ .CLI_ARGS }}

  update-tooling:
    aliases: [up]
    desc: Update common, infrastructure-tooling and all solbuild profiles present
    cmds:
      - git -C {{ .TASKFILE_DIR }}/common pull
      - |
        if [ -d "{{ .TASKFILE_DIR }}/infrastructure-tooling" ]; then
          git -C {{ .TASKFILE_DIR}}/infrastructure-tooling pull
        fi
      - sudo solbuild update
      - |
        if [ -f /usr/share/solbuild/main-x86_64.profile ]; then
          sudo solbuild update -p main-x86_64
        fi
